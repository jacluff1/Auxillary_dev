#=============================================================================#
# import from external libraries                                              #
#=============================================================================#

import os

#=============================================================================#
# import from djak suite                                                      #
#=============================================================================#

#=============================================================================#
# import from internal modules                                                #
#=============================================================================#

from files import pandas_load, pandas_save, pickle_load, pickle_save

#=============================================================================#
# class definition                                                            #
#=============================================================================#

djakBase:

    #=========================================================================#
    # constructor                                                             #
    #=========================================================================#

    def __init__(self, *args, **kwargs):
        NotImplemented

    #=========================================================================#
    # public - defined                                                        #
    #=========================================================================#

    def load_file(self, *args):
        if len(args) == 1: self.__name__update__(args[0])
        df = pandas_load(f"{self.filename}.csv")

    def load_state(self, *args):
        if len(args) == 1: self.__name__update__(args[0])
        pkl = pickle_load(f"{self.filename}.pkl")
        self.__dict__.update(pkl)

    def save_file(self, *args, **kwargs):
        if len(args) == 1:
            saveName = args[0]
        else:
            saveName = self.filename
        pandas_save(self.data, f"{saveName}.csv", **kwargs)

    def save_state(self):
        if len(args) == 1:
            saveName = args[0]
        else:
            saveName = self.filename
        pickle_save(self.__dict__, f"{saveName}.pkl")

    #=========================================================================#
    # public - declared only                                                  #
    #=========================================================================#

    #=========================================================================#
    # "protected" - defined                                                   #
    #=========================================================================#

    #=========================================================================#
    # "protected" - declared only                                             #
    #=========================================================================#

    #=========================================================================#
    # "private" - defined                                                     #
    #=========================================================================#

    def __name__update__(self, name):
        self.name = name
        self.filename = os.path.abspath(name)
